service: nestjs-serverless-dynamo
plugins:
  - serverless-plugin-optimize
  - serverless-offline
  - serverless-dynamodb

functions:
  main:
    handler: dist/main.handler
    events:
      - http:
          method: ANY
          path: /
      - http:
          method: ANY
          path: '{proxy+}'

provider:
  name: aws
  runtime: nodejs16.x
  environment:
    tableName: "Users"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource: "arn:aws:s3:::mandybura/*"

    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:DeleteItem
      Resource: '*'

  apiGateway:
    shouldStartNameWithService: true

  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'dynamodb:DescribeTable'
            - 'dynamodb:Query'
            - 'dynamodb:Scan'
            - 'dynamodb:GetItem'
            - 'dynamodb:PutItem'
            - 'dynamodb:UpdateItem'
            - 'dynamodb:DeleteItem'

          Resource: arn:aws:dynamodb:us-east-1:*:table/Users

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude: aws-sdk
    target: node16
    define: 'require.resolve: undefined'
    platform: node
    concurrency: 10

resources:
  Resources:
    RemixProjectUsers:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Users
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST







