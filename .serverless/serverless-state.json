{
  "service": {
    "service": "nestjs-serverless-dynamo",
    "serviceObject": {
      "name": "nestjs-serverless-dynamo"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "environment": {
        "tableName": "Users"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:PutObject"
          ],
          "Resource": "arn:aws:s3:::remix-bucket/*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:PutItem",
            "dynamodb:GetItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": "*"
        }
      ],
      "apiGateway": {
        "shouldStartNameWithService": true
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:DescribeTable",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Resource": "arn:aws:dynamodb:us-east-1:*:table/Users"
            }
          ]
        }
      },
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "AppLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/nestjs-serverless-dynamo-dev-app"
            }
          },
          "MyFunction1LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/nestjs-serverless-dynamo-dev-myFunction1"
            }
          },
          "UseTableLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/nestjs-serverless-dynamo-dev-useTable"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "nestjs-serverless-dynamo",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nestjs-serverless-dynamo-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nestjs-serverless-dynamo-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "nestjs-serverless-dynamo",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "AppLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/nestjs-serverless-dynamo/dev/1694937526558-2023-09-17T07:58:46.558Z/nestjs-serverless-dynamo.zip"
              },
              "Handler": "dist/serverless.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "nestjs-serverless-dynamo-dev-app",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "tableName": "Users"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AppLogGroup"
            ]
          },
          "MyFunction1LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/nestjs-serverless-dynamo/dev/1694937526558-2023-09-17T07:58:46.558Z/nestjs-serverless-dynamo.zip"
              },
              "Handler": "handler.myFunction1",
              "Runtime": "nodejs18.x",
              "FunctionName": "nestjs-serverless-dynamo-dev-myFunction1",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "tableName": "Users",
                  "TABLE_NAME": "Users"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "MyFunction1LogGroup"
            ]
          },
          "UseTableLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/nestjs-serverless-dynamo/dev/1694937526558-2023-09-17T07:58:46.558Z/nestjs-serverless-dynamo.zip"
              },
              "Handler": "handler.useTable",
              "Runtime": "nodejs18.x",
              "FunctionName": "nestjs-serverless-dynamo-dev-useTable",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "tableName": "Users",
                  "DYNAMODB_TABLE": "Users"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UseTableLogGroup"
            ]
          },
          "AppLambdaVersione03axzc6gdHrzPU04Osogba4zVucoQY2bo9Nwk1Qg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AppLambdaFunction"
              },
              "CodeSha256": "vfMKM7LCeXtq4e0v8KglpWa+DdDttin49m0e6gvS5B0="
            }
          },
          "MyFunction1LambdaVersionzXXnXCLGaugwbjhmnnI3MhnsiSH5QC5wrigtmgii2I": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "MyFunction1LambdaFunction"
              },
              "CodeSha256": "vfMKM7LCeXtq4e0v8KglpWa+DdDttin49m0e6gvS5B0="
            }
          },
          "UseTableLambdaVersionqXOZmzCjTMTgXSiYOskiKtpvauICnmPZGtL5sTfmaQU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UseTableLambdaFunction"
              },
              "CodeSha256": "vfMKM7LCeXtq4e0v8KglpWa+DdDttin49m0e6gvS5B0="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "nestjs-serverless-dynamo-dev",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceProxyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "{proxy+}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AppLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "AppLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodProxyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProxyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AppLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "AppLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1694937503361": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodAny",
              "ApiGatewayMethodProxyVarAny"
            ]
          },
          "AppLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AppLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-nestjs-serverless-dynamo-dev-ServerlessDeploymentBucketName"
            }
          },
          "AppLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AppLambdaVersione03axzc6gdHrzPU04Osogba4zVucoQY2bo9Nwk1Qg"
            },
            "Export": {
              "Name": "sls-nestjs-serverless-dynamo-dev-AppLambdaFunctionQualifiedArn"
            }
          },
          "MyFunction1LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "MyFunction1LambdaVersionzXXnXCLGaugwbjhmnnI3MhnsiSH5QC5wrigtmgii2I"
            },
            "Export": {
              "Name": "sls-nestjs-serverless-dynamo-dev-MyFunction1LambdaFunctionQualifiedArn"
            }
          },
          "UseTableLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UseTableLambdaVersionqXOZmzCjTMTgXSiYOskiKtpvauICnmPZGtL5sTfmaQU"
            },
            "Export": {
              "Name": "sls-nestjs-serverless-dynamo-dev-UseTableLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-nestjs-serverless-dynamo-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "esbuild": {
        "bundle": true,
        "minify": false,
        "sourcemap": true,
        "exclude": "aws-sdk",
        "target": "node14",
        "define": "require.resolve: undefined",
        "platform": "node",
        "concurrency": 10
      },
      "dynamodb": {
        "start": {
          "port": 6000,
          "inMemory": true,
          "migrate": true
        },
        "stages": "dev"
      }
    },
    "plugins": [
      "serverless-plugin-optimize",
      "serverless-offline",
      "serverless-dynamodb"
    ],
    "pluginsData": {},
    "functions": {
      "app": {
        "handler": "dist/serverless.handler",
        "events": [
          {
            "http": {
              "method": "any",
              "path": "",
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "any",
              "path": "{proxy+}",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "nestjs-serverless-dynamo-dev-app",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "AppLambdaVersione03axzc6gdHrzPU04Osogba4zVucoQY2bo9Nwk1Qg"
      },
      "myFunction1": {
        "handler": "handler.myFunction1",
        "runtime": "nodejs18.x",
        "environment": {
          "TABLE_NAME": "Users"
        },
        "events": [],
        "name": "nestjs-serverless-dynamo-dev-myFunction1",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "MyFunction1LambdaVersionzXXnXCLGaugwbjhmnnI3MhnsiSH5QC5wrigtmgii2I"
      },
      "useTable": {
        "handler": "handler.useTable",
        "environment": {
          "DYNAMODB_TABLE": "Users"
        },
        "events": [],
        "name": "nestjs-serverless-dynamo-dev-useTable",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "UseTableLambdaVersionqXOZmzCjTMTgXSiYOskiKtpvauICnmPZGtL5sTfmaQU"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "nestjs-serverless-dynamo",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/home/evgen/ipr0013/nest-serverless-dynamo/.serverless/nestjs-serverless-dynamo.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/nestjs-serverless-dynamo/dev/1694937526558-2023-09-17T07:58:46.558Z",
    "artifact": "nestjs-serverless-dynamo.zip"
  }
}